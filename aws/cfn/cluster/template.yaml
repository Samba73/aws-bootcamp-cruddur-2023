AWSTemplateFormatVersion: 2010-09-09
Description: |
  setup ECS cluster
Parameters:
CertificateARN:
  Type: String

Resources:
  FGATECluster:
    Type: AWS::ECS::Cluster
    Properties:
      CapacityProviders: FARGATE
      ClusterName: !Sub '{AWS::StackName}FGATECluster'
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Configuration:  
        ExecuteCommandConfiguration: 
          Logging: DEFAULT
      ServiceConnectDefaults:
        Namespace: cruddur

  ALB:
    Type: AWS::ElasticLoadBalancingv2::LoadBalancer
    Properties:
      Name: !Sub '${AWS::StackName}ALB'
      Type: Application
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: routing.http2.enabled
          Value: true
        - Key: routing.http.preserve_host_header.enabled
          Value: false
        - Key: routing.http.xff_header_processing.mode
          Value: append
        - Key: deletion_protection.enabled
          Value: true
        - Key: load_balancing.cross_zone.enabled
          Value: true
        - Key: access_logs.s3.enabled
          Value: false 
        # if required to turn on logs
        # - Key: access_logs.s3.bucket
        #   Value: bucket-name
        # - Key: access_logs.s3.prefix
        #   Value: ""
      Scheme: internet-facing
      Subnets: !Split [",", PublicSubnets]
      SecurityGroups: !GetAtt ALBSG.GroupId
  HTTPListener:    
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties
      DefaultActions:
        - Type: redirect
          RedirectConfig:
           Protocol: "HTTPS"
           Port: 443
           Host: "#{host}"
           Path: "/#{path}"
           Query: "#{query}"
           StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: "HTTP"
   HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGrpArn: !Ref Frontend-TG
      Certificates:
        - CertificateArn: !Ref CertificateARN
     LoadBalancerArn: !Ref ALB
      Port: '443'
      Protocol: HTTPS
   ALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Internet facinf SG for cruddur ALB
      GroupName: !Sub '{AWS::StackName}AlbSG'
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0   
          Description: Public HTTP
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Decription: Public HTTPS
   ApiALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:   
      Conditions:
        - Field: host-header
          HostHeaderConfig:
          Values: 
            - api.cruddur.in
      Actions:
        - Action: forward
          ForwardConfig:
          TargetGroupArn: !Ref Backend-TG
      ListenerArn: !Ref HTTPSListener
      Priority: 1
      
   Frontend-TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      IpAddressType: ipv4
      Matcher: 
        HttpCode: 200
      Port: 3000
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Tags: 
        - Key: target-grp-name
          Value: frontend
     TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds
          Value: 0
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue VpcId 
   Backend-TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /api/health_check
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      IpAddressType: ipv4
      Matcher: 
        HttpCode: 200
      Port: 4567
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Tags: 
        - Key: target-grp-name
          Value: backend
     TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds
          Value: 0
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue VpcId 
   
