version: "3.8"
services:
  backend-flask:
    env_file:
      - backend-flask.env
    build: 
      context: ./backend-flask
      dockerfile: Dockerfile
    ports:
      - "4567:4567"
    networks:
      - cruddur-net  
    volumes:
      - ./backend-flask:/backend-flask
  frontend-react-js:
    env_file:
      - frontend-react-js.env
    build: 
      context: ./frontend-react-js
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - cruddur-net  
    volumes:
      - ./frontend-react-js:/frontend-react-js
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - cruddur-net
    volumes:
      - db:/var/lib/postgresql/data
  dynamodb-local:
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    networks:
      - cruddur-net
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal    
volumes:
  db:
    driver: local
networks:
  cruddur-net:
    driver: bridge
    name: cruddur-net    
  # dynamodb-local:
  #   user: root
  #   command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
  #   image: "amazon/dynamodb-local:latest"
  #   container_name: dynamodb-local
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - "./docker/dynamodb:/home/dynamodblocal/data"
  #   working_dir: /home/dynamodblocal
#  xray-daemon:
#    image: "amazon/aws-xray-daemon"
#    environment:
#      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
#      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
#      AWS_REGION: "us-east-1"
#    command:
#      - "xray -o -b xray-daemon:2000"
#    ports:
#      - 2000:2000/udp 
#  otel-collector:
#    environment:
#      FRONTEND_URL_HTTPS: "https://3000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
#      FRONTEND_URL_HTTP: "http://3000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
#    image: otel/opentelemetry-collector
#    command: [--config=/conf/otel-collector-config.yaml]
#    volumes:
#      - ./otel-collector-config.yaml:/conf/otel-collector-config.yaml
#    ports:
#      - 4317:4317 # OTLP gRPC receiver
#      - 4318:4318 # OTLP http receiver  



